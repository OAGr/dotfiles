
# Free the original Ctrl-b prefix keybinding
# START:unbind
set -g prefix C-f
unbind-key C-b
bind-key C-f send-prefix

set-option -g default-shell /bin/zsh
# END:unbind


#setting the delay between prefix and command
# START:delay
set -s escape-time 1
# END:delay
# Ensure that we can send Ctrl-A to other apps
# START:bind_prefix
bind C-a send-prefix
# END:bind_prefix

# Set the base index for windows to 1 instead of 0
# START:index
set -g base-index 1
# END:index

# Set the base index for panes to 1 instead of 0
# START:panes_index
setw -g pane-base-index 1
# END:panes_index

# Reload the file with Prefix r
# START:reload
bind r source-file ~/.tmux.conf \; display "Reloaded!"
# END:reload

# splitting panes
# START:panesplit
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# END:panesplit

# moving between panes
# START:paneselect
bind h select-pane -L 
bind j select-pane -D 
bind k select-pane -U
bind l select-pane -R    
# END:paneselect

# Quick pane selection
# START:panetoggle
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
# END:panetoggle

# Pane resizing
# START:paneresize
bind -r H resize-pane -L 5 
bind -r J resize-pane -D 5 
bind -r K resize-pane -U 5 
bind -r L resize-pane -R 5
# END:paneresize
# mouse support - set to on if you want to use the mouse
# START:mouse
setw -g mode-mouse off 
# END:mouse
set -g mouse-select-pane off 
set -g mouse-resize-pane off 
set -g mouse-select-window off

# Set the default terminal mode to 256color mode
# START:termcolor
set -g default-terminal "screen-256color"
# END:termcolor

# enable activity alerts
#START:activity
setw -g monitor-activity on
set -g visual-activity on
#END:activity

# set the status line's colors
# START:statuscolor
set -g status-fg white
set -g status-bg "#000000"
# END:statuscolor

# set the color of the window list
# START:windowstatuscolor
setw -g window-status-fg "#808080"
setw -g window-status-bg default 
setw -g window-status-attr dim
# END:windowstatuscolor

# set colors for the active window
# START:activewindowstatuscolor
setw -g window-status-current-fg green
setw -g window-status-current-bg "#000000"
setw -g window-status-current-attr bright
# END:activewindowstatuscolor

# pane colors
# START:panecolors
set -g pane-border-fg "#808080"
set -g pane-border-bg "#000000"
set -g pane-active-border-fg green
set -g pane-active-border-bg "#000000"
# END:panecolors

# Command / message line
# START:cmdlinecolors
set -g message-fg white
set -g message-bg "#000000"
set -g message-attr bright
# END:cmdlinecolors

# Status line left side
# START:statusleft
set -g status-left-length 40 
#set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
set -g status-left "#[fg=green]S: #S #[fg=yellow]#I #[fg=cyan]#P"
# END:statusleft

#START:utf8
set -g status-utf8 on
#END:utf8

# Status line right side
# 15% | 28 Nov 18:15
# START: statusright
# set -g status-right "#[fg=cyan]%d %b %R"
 set -g status-right ""
# END:statusright

# Update the status bar every sixty seconds
# START:updateinterval
set -g status-interval 60
# END:updateinterval

# Center the window list
# START:centerwindowlist
set -g status-justify centre
# END:centerwindowlist

# enable vi keys.
# START:vikeys
setw -g mode-keys vi
# END:vikeys


#for copy&paste to be vimlike
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection


#Copy&Paste with clipboard
# move x clipboard into tmux paste buffer
bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
bind C-y run "tmux save-buffer - | xclip -i"

#Doesn't work in Docker
#set -g default-command "$SHELL --login"

set -g default-shell $SHELL

# This part taken from https://gist.github.com/spicycode/1229612
# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D 
bind -n M-k select-pane -U
bind -n M-l select-pane -R
 
# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
 
# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Taken from http://stackoverflow.com/questions/15470001/bind-ctrltab-and-ctrlshifttab-in-tmux
bind C-Tab next-window
bind C-S-Tab next-window

#https://github.com/tmuxinator/tmuxinator
set-window-option -g pane-base-index 1


#http://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\'') || tmux select-pane -l"


#increase history limit

set -g history-limit 10000

#Tmux Plugin Manager Configuration
#https://github.com/tmux-plugins/tpm

# List of plugins
# Supports `github_username/repo` or full git URLs
# To install
# 1. Clone TPM
#  git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
# 2. Source
# tmux source-file ~/.tmux.conf
# 3. install
# prefix + I
#
####################################
############ PLUGINS ###############
####################################
#
set -g @tpm_plugins "              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-sensible       \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-open      \
  tmux-plugins/tmux-copycat      \
  tmux-plugins/tmux-yank      \
"

# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# initializes TMUX plugin manager
run-shell ~/.tmux/plugins/tpm/tpm

#Tmux-Resurrect
set -g @resurrect-processes 'ssh psql mysql sqlite3'
set -g @resurrect-strategy-vim "session"

#Tmux-Yank
#On mac
# brew install reattach-to-user-namespace
#Ubuntu
#sudo apt-get install xclip
#
set -g @yank_selection "primary"
